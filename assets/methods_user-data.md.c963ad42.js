import{_ as s,c as a,o as n,a as t}from"./app.71fa2e39.js";const f='{"title":"user","description":"","frontmatter":{},"headers":[{"level":2,"title":"user","slug":"user"},{"level":2,"title":"fetch","slug":"fetch"}],"relativePath":"methods/user-data.md","lastUpdated":1724294684000}',p={},e=t(`<h2 id="user" tabindex="-1">user <a class="header-anchor" href="#user" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code>auth<span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>setUserData<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span> <span class="token operator">|</span> <span class="token keyword">null</span>
</code></pre></div><p>Returns the user object or <code>null</code> if not yet set.</p><p>This can also be used to manually set the user data by passing in an object.</p><h4 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-hidden="true">#</a></h4><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> user <span class="token operator">=</span> computed<span class="token operator">&lt;</span><span class="token punctuation">{</span>
  <span class="token literal-property property">first_name</span><span class="token operator">:</span> string
  <span class="token literal-property property">last_name</span><span class="token operator">:</span> string
<span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> auth<span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  auth<span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">first_name</span><span class="token operator">:</span> <span class="token string">&quot;Rob&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">last_name</span><span class="token operator">:</span> <span class="token string">&quot;Nova&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-hidden="true">#</a></h4><h2 id="fetch" tabindex="-1">fetch <a class="header-anchor" href="#fetch" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code>auth<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>options<span class="token operator">:</span> AxiosRequestConfig <span class="token operator">&amp;</span> Options<span class="token punctuation">[</span><span class="token string">&quot;fetchData&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>AxiosResponse<span class="token operator">&gt;</span>
</code></pre></div><p>Execute a fetch request.</p><p>Manually fetches the user data. Sometimes useful to pull a fresh set of user data.</p><h4 id="examples-1" tabindex="-1">Examples <a class="header-anchor" href="#examples-1" aria-hidden="true">#</a></h4><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  auth<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="references-1" tabindex="-1">References <a class="header-anchor" href="#references-1" aria-hidden="true">#</a></h4><ul><li><a href="/guide/requests.html">Requests Guide</a></li><li><a href="/options/core.html#refreshToken">refreshToken Option</a></li></ul>`,15),o=[e];function c(u,l,r,i,k,d){return n(),a("div",null,o)}var g=s(p,[["render",c]]);export{f as __pageData,g as default};
