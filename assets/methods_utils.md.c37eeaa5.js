import{_ as n,c as a,o as s,a as t}from"./app.c45f2071.js";const m='{"title":"remember","description":"","frontmatter":{},"headers":[{"level":2,"title":"remember","slug":"remember"},{"level":2,"title":"unremember","slug":"unremember"},{"level":2,"title":"redirect","slug":"redirect"},{"level":2,"title":"refresh","slug":"refresh"},{"level":2,"title":"token","slug":"token"},{"level":2,"title":"disableImpersonate","slug":"disableimpersonate"},{"level":2,"title":"enableImpersonate","slug":"enableimpersonate"}],"relativePath":"methods/utils.md","lastUpdated":1740801322000}',e={},p=t(`<h2 id="remember" tabindex="-1">remember <a class="header-anchor" href="#remember" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code>auth<span class="token punctuation">.</span><span class="token function">remember</span><span class="token punctuation">(</span>data<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span> <span class="token operator">|</span> <span class="token keyword">null</span>
</code></pre></div><p>Returns the &quot;remember&quot; data or <code>null</code> if not set.</p><p>This can also manually set the remember data which is automatically used by the <code>login</code>, <code>register</code> and <code>oauth2</code> methods when using the <code>remember</code> option.</p><p>Intended use is to set some data such as a name for when a user returns the page and is logged out. For example we may want to show &quot;Welcome back, Rob&quot; if the remember data is set.</p><blockquote><p>This must set a string and should use <code>JSON.stringify</code> and <code>JSON.parse</code> if using objects.</p></blockquote><h4 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-hidden="true">#</a></h4><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$auth.remember()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Welcome back, {{ $auth.remember() }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">remember</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  auth<span class="token punctuation">.</span><span class="token function">remember</span><span class="token punctuation">(</span><span class="token string">&quot;Rob&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-hidden="true">#</a></h4><ul><li><a href="/options/core.html#rememberkey">rememberKey Option</a></li></ul><h2 id="unremember" tabindex="-1">unremember <a class="header-anchor" href="#unremember" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code>auth<span class="token punctuation">.</span><span class="token function">unremember</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
</code></pre></div><p>Clear out the remember data.</p><h4 id="examples-1" tabindex="-1">Examples <a class="header-anchor" href="#examples-1" aria-hidden="true">#</a></h4><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">unremember</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  auth<span class="token punctuation">.</span><span class="token function">unremember</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="redirect" tabindex="-1">redirect <a class="header-anchor" href="#redirect" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code>auth<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">null</span>
    from<span class="token operator">:</span> RouteLocationNormalized <span class="token operator">|</span> <span class="token keyword">null</span>
    to<span class="token operator">:</span> RouteLocationNormalized <span class="token operator">|</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">null</span>
</code></pre></div><p>Returns redirect caused by the vue-auth plugin.</p><p>This includes a status code to indicate what caused the redirect. This is useful for cases where a login redirect has occurred or even for debugging.</p><h4 id="examples-2" tabindex="-1">Examples <a class="header-anchor" href="#examples-2" aria-hidden="true">#</a></h4><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> redirect <span class="token operator">=</span> auth<span class="token punctuation">.</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  auth
    <span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token operator">...</span>
      <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> redirect <span class="token operator">?</span> redirect<span class="token punctuation">.</span>from<span class="token punctuation">.</span>name <span class="token operator">:</span> <span class="token string">&#39;user-account&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="refresh" tabindex="-1">refresh <a class="header-anchor" href="#refresh" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code>auth<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span>options<span class="token operator">:</span> AxiosRequestConfig <span class="token operator">&amp;</span> Options<span class="token punctuation">[</span><span class="token string">&quot;refreshToken&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Options<span class="token punctuation">[</span><span class="token string">&quot;refreshToken&quot;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
</code></pre></div><p>Execute a refresh request.</p><p>This is used for refreshing the user token. Use the <code>fetch()</code> method to re-fetch the actual user data instead.</p><h4 id="examples-3" tabindex="-1">Examples <a class="header-anchor" href="#examples-3" aria-hidden="true">#</a></h4><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  auth<span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="references-1" tabindex="-1">References <a class="header-anchor" href="#references-1" aria-hidden="true">#</a></h4><ul><li><a href="/guide/requests.html">Requests Guide</a></li><li><a href="/options/core.html#refreshToken">refreshToken Option</a></li></ul><h2 id="token" tabindex="-1">token <a class="header-anchor" href="#token" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code>auth<span class="token punctuation">.</span><span class="token function">token</span><span class="token punctuation">(</span>setToken<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span>
</code></pre></div><p>Returns the token data or <code>null</code> if not set.</p><p>Can also be used to manually set a token.</p><p>If the <code>name</code> parameter is not specified it will use the default. The <code>token</code> parameter is used if setting rather than fetching a token. The optional <code>expires</code> parameter specifies whether token should remain after the browser is closed or not.</p><blockquote><p>The token is automatically stored when logging in with the <code>staySignedIn</code> option mapping directly to the <code>expires</code> parameter.</p></blockquote><h4 id="examples-4" tabindex="-1">Examples <a class="header-anchor" href="#examples-4" aria-hidden="true">#</a></h4><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> token <span class="token operator">=</span> computed<span class="token operator">&lt;</span>string <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> auth<span class="token punctuation">.</span><span class="token function">token</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    auth<span class="token punctuation">.</span><span class="token function">token</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;MY-TOKEN_CODE&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="references-2" tabindex="-1">References <a class="header-anchor" href="#references-2" aria-hidden="true">#</a></h4><ul><li><a href="/guide/token.html">Tokens Guide</a></li><li><a href="/options/core.html#tokendefaultkey">tokenDefaultKey Option</a></li><li><a href="/options/core.html#tokenimpersonatekey">tokenImpersonateKey Option</a></li><li><a href="/options/core.html#stores">stores Option</a></li></ul><h2 id="disableimpersonate" tabindex="-1">disableImpersonate <a class="header-anchor" href="#disableimpersonate" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code>auth<span class="token punctuation">.</span><span class="token function">disableImpersonate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</code></pre></div><p>Disables impersonating mode.</p><p>Used to temporary disable impersonating mode in case we need to fire a request withe the &quot;admin&quot; user while impersonating.</p><h4 id="examples-5" tabindex="-1">Examples <a class="header-anchor" href="#examples-5" aria-hidden="true">#</a></h4><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  auth<span class="token punctuation">.</span><span class="token function">disableImpersonate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// run as admin</span>

  auth<span class="token punctuation">.</span><span class="token function">enableImpersonate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="enableimpersonate" tabindex="-1">enableImpersonate <a class="header-anchor" href="#enableimpersonate" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code>auth<span class="token punctuation">.</span><span class="token function">enableImpersonate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
</code></pre></div><p>Enables impersonating mode.</p><p>Used to re-enable impersonating mode if previously disabled.</p><h4 id="examples-6" tabindex="-1">Examples <a class="header-anchor" href="#examples-6" aria-hidden="true">#</a></h4><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  auth<span class="token punctuation">.</span><span class="token function">disableImpersonate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// run as admin</span>

  auth<span class="token punctuation">.</span><span class="token function">enableImpersonate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,51),o=[p];function c(l,u,i,r,k,d){return s(),a("div",null,o)}var g=n(e,[["render",c]]);export{m as __pageData,g as default};
