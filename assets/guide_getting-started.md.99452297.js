import{_ as a,c as n,o as s,a as t}from"./app.c45f2071.js";const g='{"title":"Getting started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Vue","slug":"vue"},{"level":2,"title":"TypeScript","slug":"typescript"}],"relativePath":"guide/getting-started.md","lastUpdated":1740801333000}',e={},p=t(`<h1 id="getting-started" tabindex="-1">Getting started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>We will be using <a href="https://github.com/lukehoban/es6features" target="_blank" rel="noopener noreferrer">ES6</a> in the code samples in the guide.</p><p>Also, all examples will be using the full version of Vue to make on-the-fly template compilation possible. See more details <a href="https://v3.vuejs.org/guide/installation.html#runtime-compiler-vs-runtime-only" target="_blank" rel="noopener noreferrer">here</a>.</p></div><div class="warning custom-block"><p class="custom-block-title">\`$auth\`</p><p>In the following pages of instructions I will use <code>composition/api</code>. <code>$auth</code> is still backward compatible from <a href="https://npmjs.org/package/@websanova/vue-auth" target="_blank" rel="noopener noreferrer">@websanova/vue-auth</a> but it is deprecated</p></div><p>Creating a global application with Vue + Vue Auth 3 is very simple. With Vue.js, we composed our app with components. When we add Vue Auth 3 to the mix, all we need to do is get resource notification ready and simply use the auth API provided by vue-auth3.</p><p>Here\u2019s a basic example:</p><h2 id="vue" tabindex="-1">Vue <a class="header-anchor" href="#vue" aria-hidden="true">#</a></h2><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$auth.check()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    {{ $auth.user() }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>You have not login!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p><code>composition/api</code>:</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>auth.check()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    {{ auth.user() }}
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>You have not login!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-auth3&quot;</span>

<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>When a user is authenticated the app will likely need to do some initial preload and checks.</p><p>For instance if we refresh the app in authenticated mode, we&#39;ll need to first check tokens and fetch some data.</p><p>A special <code>$auth.ready()</code> Method has been created for this specific case.</p><h2 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span>
<span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">&quot;./router&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createAuth <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-auth3&quot;</span>

<span class="token keyword">import</span> driverAuthBasic <span class="token keyword">from</span> <span class="token string">&quot;vue-auth3/drivers/auth/basic&quot;</span>
<span class="token keyword">import</span> driverHttpAxios <span class="token keyword">from</span> <span class="token string">&quot;vue-auth3/drivers/http/axios&quot;</span>

<span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">createAuth</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">{</span>
    router<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  drivers<span class="token operator">:</span> <span class="token punctuation">{</span>
    auth<span class="token operator">:</span> driverAuthBasic<span class="token punctuation">,</span>
    http<span class="token operator">:</span> driverHttpAxios<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>auth<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span>
</code></pre></div><p>By calling <code>app.use(auth)</code>, By default, we can access the VueAuth3 instance from each component with <code>this.$auth</code>, which can be referenced from the <code>global</code> property of auth instance that created with <code>createAuth</code>. As well as, auth API such as <code>this.$auth</code> is also injected into each component, so these API can be used with templates.</p><p>To use similar ways at the <code>setup</code> function, you need to call the <code>useAuth</code> functions. We will learn more about this in the <a href="https://v3.vuejs.org/guide/composition-api-introduction.html" target="_blank" rel="noopener noreferrer">Composition API</a></p><p>Throughout the docs, we\u2019ll use APIs like <code>this.$auth</code>, which are almost keep backward compatible from <a href="https://npmjs.org/package/@websanova/vue-auth" target="_blank" rel="noopener noreferrer">@websanova/vue-auth</a>.</p><p>The following sections will be explained using the Legacy API mode.</p>`,18),o=[p];function c(u,l,i,r,k,d){return s(),n("div",null,o)}var m=a(e,[["render",c]]);export{g as __pageData,m as default};
